{"version":3,"sources":["logo.svg","Components/Navigation.js","Components/ColorButton.js","Components/ListOfColorChoices.js","Components/TwitchVideo.js","Components/TwitchChat.js","Components/YoutubeChat.js","Components/CustomColorPicker.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navigation","props","state","value","handleChange","bind","handleSubmit","event","this","setState","target","alert","preventDefault","id","className","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","aria-current","href","Link1Point","Link1Text","Link2Point","Link2Text","SiteTitle","Link3Point","Link3Text","Link4Point","Link4Text","React","Component","ColorButton","saveAndContinue","e","formdata","FormData","append","fetch","method","body","redirect","then","response","text","catch","error","console","log","document","getElementById","disabled","setTimeout","divStyle","borderColor","Hex","borderWidth","url","data","Name","onClick","style","ListOfColorChoices","arrayOfColors","colorfromjson","colors","property","object","push","key","class","TwitchVideo","autoplay","Autoplay","CompleteURL","ChannelName","SiteSource","Muted","Title","title","src","frameborder","allowfullscreen","scrolling","width","height","TwitchChat","completeURL","siteSource","YoutubeChat","LiveStreamCode","CustomColorPicker","pickr","Pickr","create","el","theme","position","swatches","components","preview","opacity","hue","interaction","hex","rgba","hsla","hsva","cmyk","input","clear","save","getElementsByClassName","on","instance","color","hide","zIndex","left","bottom","defaultColors","Red","Orange","Yellow","Green","Blue","Purple","Violet","App","Helmet","charset","name","content","background","window","location","hostname","Boolean","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.8604b144.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\n\r\nclass Navigation extends React.Component {\r\nconstructor(props) {\r\n    super(props);\r\n    this.state = {value: ''};\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    \r\n  }\r\n \r\n  handleChange(event) {\r\n    this.setState({value: event.target.value});\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    alert('A name was submitted: ' + this.state.value);\r\n    event.preventDefault();\r\n    \r\n  }\r\n  \r\n  render() {\r\n      return (\r\n        <nav id={this.props.id} className=\"navbar navbar-expand-lg navbar-light bg-light text-center sticky-md-top\">\r\n  <div className=\"container-fluid\">\r\n    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarTogglerDemo01\" aria-controls=\"navbarTogglerDemo01\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo01\">\r\n      <ul className=\"ml-auto mx-auto navbar-nav mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href={this.props.Link1Point}><h3>{this.props.Link1Text}</h3></a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href={this.props.Link2Point}><h3>{this.props.Link2Text}</h3></a>\r\n        </li>\r\n      </ul>\r\n      <a className=\"navbar-brand\" href={this.props.Link1Point}><h1>{this.props.SiteTitle}</h1></a>\r\n\r\n      <ul className=\" ml-auto mx-auto navbar-nav mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link \" aria-current=\"page\" href={this.props.Link3Point}><h3>{this.props.Link3Text}</h3></a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href={this.props.Link4Point}><h3>{this.props.Link4Text}</h3></a>\r\n        </li>\r\n      </ul>\r\n\r\n    </div>\r\n  </div>\r\n</nav>\r\n       \r\n       /* <nav>\r\n            <h1 classNameName=\"HiddenTitle\" > {this.props.SiteTitle}</h1>\r\n            <div classNameName=\"hamburger\">\r\n                <div classNameName=\"line\"></div>\r\n                <div classNameName=\"line\"></div>\r\n                <div classNameName=\"line\"></div>\r\n            </div>\r\n            <ul classNameName=\"nav-links\">\r\n                <li><a href={this.props.Link1Point}>{this.props.Link1Text}</a></li>\r\n                <li><a href={this.props.Link2Point}>{this.props.Link2Text}</a></li>\r\n                <h1 classNameName=\"title\"> {this.props.SiteTitle}</h1>\r\n                <li><a href={this.props.Link3Point}>{this.props.Link3Text}</a></li>\r\n                <li><a href={this.props.Link4Point}>{this.props.Link4Text}</a></li>\r\n            </ul>\r\n        </nav>\r\n\r\n<Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n<Navbar.Brand href=\"#home\">{this.props.SiteTitle}</Navbar.Brand>\r\n\r\n  <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n  <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n\r\n    <Nav classNameName=\"mr-auto\">\r\n      <Nav.Link href={this.props.Link1Point}>{this.props.Link1Text}</Nav.Link>\r\n      <Nav.Link href={this.props.Link2Point}>{this.props.Link2Text}</Nav.Link>\r\n      <Nav.Link href={this.props.Link3Point}>{this.props.Link3Text}</Nav.Link>\r\n      <Nav.Link href={this.props.Link4Point}>{this.props.Link4Text}</Nav.Link>\r\n    </Nav>\r\n    <Nav>\r\n      <Nav.Link href=\"#deets\">More deets</Nav.Link>\r\n      <Nav.Link eventKey={2} href=\"#memes\">\r\n        Dank memes\r\n      </Nav.Link>\r\n    </Nav>\r\n  </Navbar.Collapse>\r\n  \r\n</Navbar>\r\n*/\r\n      );\r\n    }\r\n  }\r\n\r\n  export default Navigation;\r\n","import React from 'react';\r\n\r\nclass ColorButton extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {value: ''};\r\n  \r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleSubmit = this.handleSubmit.bind(this);\r\n      this.divStyle = {borderColor:props.Hex, borderWidth: '5px'};\r\n    }\r\n  \r\n    handleChange(event) {\r\n      this.setState({value: event.target.value});\r\n    }\r\n  \r\n    handleSubmit(event) {\r\n      event.preventDefault();\r\n    }\r\n    async postData(url = '', data = {}) {\r\n      // Default options are marked with *\r\n      try{\r\n        const response = await fetch(url, {\r\n          method: 'POST', // *GET, POST, PUT, DELETE, etc.\r\n          body: data // body data type must match \"Content-Type\" header\r\n        });\r\n        return response;\r\n      }\r\n      catch(error){\r\n        return error;\r\n      }\r\n      }\r\n    // So this gets my button's data once it's clicked, it's ran on click and the event or object data is sent to it. So then from here we could POST the data and disable the button for a bit.\r\n    saveAndContinue = (e) => {\r\n        e.preventDefault();\r\n        //console.log(e.target);\r\n        //console.log(e.target.value); //will give you the value continue\r\n\r\n        var formdata = new FormData();\r\nformdata.append(\"colorHex\", e.target.value);\r\n\r\nvar requestOptions = {\r\n  method: 'POST',\r\n  body: formdata,\r\n  redirect: 'follow'\r\n};\r\n\r\nfetch(\"/colorsubmit\", requestOptions)\r\n  .then(response => response.text())\r\n  .catch(error => console.log('error', error));\r\n        /*\r\n        var formdata = new FormData();\r\n        formdata.append(\"colorHex\", e.target.value);\r\n         this.postData('/colorsubmit', formdata).then(data => {console.log(data.ok);});\r\n         */\r\n         let target = document.getElementById(e.target.id);\r\n         target.disabled = true;\r\n          setTimeout(function() {\r\n            target.disabled = false;\r\n          }, 5000);\r\n\r\n    }\r\n    render() {\r\n      return (\r\n              <button type=\"button\" className=\"btn btn-dark\" id={this.props.Name} value={this.props.Hex} onClick={this.saveAndContinue} style={this.divStyle}>{this.props.Name}</button>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default ColorButton;\r\n","import React from 'react';\r\nimport ColorButton from './ColorButton';\r\n\r\n\r\n  class ListOfColorChoices extends React.Component {\r\n    // return JSON data from any file path (asynchronous)\r\n\r\n\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {arrayOfColors: [], colorfromjson:[]};\r\n      // load JSON data; then proceed\r\n      if(props.colors === \"default\"){\r\n        for ( const property in props.object) {\r\n          //console.log(\"COMP MOUNTED\");\r\n          //console.log(`${property}: ${props.object[property]}`);\r\n          this.state.arrayOfColors.push(<li className=\"nav-item px-2\" key={property}><ColorButton  Name={property} Hex={props.object[property]} /></li>);\r\n        }\r\n      }\r\n\r\n    }\r\n    componentDidMount(){\r\n\r\n    }\r\n    render() {\r\n        return (\r\n          <ul class=\"nav colorNav\" id=\"\">\r\n        \r\n        {this.state.arrayOfColors}\r\n      </ul>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default ListOfColorChoices;\r\n","import React from 'react';\r\n\r\n\r\n  class TwitchVideo extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n      super(props);\r\n      let autoplay = \"\";\r\n      console.log(props.Autoplay + \"props.Autoplay\");\r\n      if(props.Autoplay === true){\r\n        autoplay=\"true\";\r\n      }\r\n      else{\r\n        autoplay = \"false\";\r\n      }\r\n      this.state = {CompleteURL: \"https://player.twitch.tv/?channel=\"+props.ChannelName+\"&parent=\"+props.SiteSource +\"&autoplay=\"+props.Autoplay +\"&muted=\"+this.props.Muted, Autoplay: autoplay, Title: props.Title};\r\n\r\n    \r\n    }\r\n    componentDidMount(){\r\n\r\n    }\r\n    render() {\r\n        return (\r\n          <>\r\n          <div id=\"twitch-embed\"></div>\r\n\r\n            <iframe title={this.state.Title} src={this.state.CompleteURL} frameborder=\"0\" allowfullscreen=\"true\" scrolling=\"no\" width=\"100%\" height=\"100%\" ></iframe>\r\n            </>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default TwitchVideo;\r\n","import React from 'react';\r\n\r\n\r\n  class TwitchChat extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {completeURL: \"https://www.twitch.tv/embed/\"+props.ChannelName+\"/chat?parent=\"+props.siteSource};\r\n    }\r\n    componentDidMount(){\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <iframe src={this.state.completeURL} width=\"100%\" height=\"100%\"></iframe>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default TwitchChat;\r\n","\r\nimport React from 'react';\r\n\r\n\r\n  class YoutubeChat extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {completeURL: \"https://www.youtube.com/live_chat?is_popout=1&v=\"+props.LiveStreamCode+\"&embed_domain=\"+props.siteSource};\r\n    }\r\n    componentDidMount(){\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <iframe src={this.state.completeURL} width=\"100%\" height=\"100%\"></iframe>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default YoutubeChat;\r\n","import React from 'react';\r\nimport '@simonwep/pickr/dist/themes/nano.min.css';      // 'nano' theme\r\n\r\n// Modern or es5 bundle (pay attention to the note below!)\r\nimport Pickr from '@simonwep/pickr/dist/pickr.es5.min';\r\n\r\n\r\nclass CustomColorPicker extends React.Component {\r\nconstructor(props) {\r\n    super(props);\r\n    this.state = {value: ''};\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    \r\n  }\r\n \r\n  handleChange(event) {\r\n    this.setState({value: event.target.value});\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    alert('A name was submitted: ' + this.state.value);\r\n    event.preventDefault();\r\n    \r\n  }\r\n  componentDidMount(){\r\n    const pickr = Pickr.create({\r\n        el: '.pickr-container',\r\n        theme: 'classic', // or 'monolith', or 'nano'\r\n        position: 'top-middle',\r\n\r\n        swatches: [\r\n            'rgba(244, 67, 54, 1)',\r\n            'rgba(233, 30, 99, 0.95)',\r\n            'rgba(156, 39, 176, 0.9)',\r\n            'rgba(103, 58, 183, 0.85)',\r\n            'rgba(63, 81, 181, 0.8)',\r\n            'rgba(33, 150, 243, 0.75)',\r\n            'rgba(3, 169, 244, 0.7)',\r\n            'rgba(0, 188, 212, 0.7)',\r\n            'rgba(0, 150, 136, 0.75)',\r\n            'rgba(76, 175, 80, 0.8)',\r\n            'rgba(139, 195, 74, 0.85)',\r\n            'rgba(205, 220, 57, 0.9)',\r\n            'rgba(255, 235, 59, 0.95)',\r\n            'rgba(255, 193, 7, 1)'\r\n        ],\r\n    \r\n        components: {\r\n    \r\n            // Main components\r\n            preview: true,\r\n            opacity: true,\r\n            hue: true,\r\n    \r\n            // Input / output Options\r\n            interaction: {\r\n                hex: true,\r\n                rgba: true,\r\n                hsla: true,\r\n                hsva: true,\r\n                cmyk: true,\r\n                input: true,\r\n                clear: true,\r\n                save: true\r\n            }\r\n        }\r\n    });\r\n    document.getElementsByClassName(\"pcr-save\")[0].value = \"SUBMIT\";\r\n    pickr.on('init', instance => {\r\n\r\n        console.log('init', instance);\r\n\r\n\r\n\r\n    }).on('hide', instance => {\r\n        console.log('hide', instance);\r\n    }).on('show', (color, instance) => {\r\n        console.log('show', color, instance);\r\n    }).on('save', (color, instance) => {\r\n        pickr.hide();\r\n        console.log('save', color, instance);\r\n    }).on('clear', instance => {\r\n        console.log('clear', instance);\r\n    }).on('change', (color, instance) => {\r\n        console.log('change', color, instance);\r\n    }).on('changestop', instance => {\r\n        console.log('changestop', instance);\r\n    }).on('cancel', instance => {\r\n        console.log('cancel', instance);\r\n    }).on('swatchselect', (color, instance) => {\r\n        console.log('swatchselect', color, instance);\r\n    });\r\n    }\r\n    \r\n  render() {\r\n      return (\r\n<main style={{zIndex: \"5\", position: \"fixed\", left:\"1vw\", bottom: \"1vh\"  }}>\r\n    <div class=\"pickr-container \" ></div>\r\n</main>\r\n       \r\n    \r\n      );\r\n    }\r\n  }\r\n\r\n  export default CustomColorPicker;\r\n","import React from 'react';\nimport Navigation from './Components/Navigation';\nimport ListOfColorChoices from './Components/ListOfColorChoices';\nimport logo from './logo.svg';\n//import './Style.css';\nimport {Helmet} from \"react-helmet\";\nimport TwitchVideo from './Components/TwitchVideo';\nimport TwitchChat from './Components/TwitchChat';\nimport YoutubeChat from './Components/YoutubeChat';\nimport CustomColorPicker from './Components/CustomColorPicker';\nimport Pickr from '@simonwep/pickr/dist/pickr.es5.min';\nimport '@simonwep/pickr/dist/themes/nano.min.css';      // 'nano' theme\n\nlet defaultColors = { Red: \"#FF0000\", Orange: \"#FFA500\", Yellow: \"#FFFF00\", Green: \"#00FF00\", Blue: \"#0000FF\", Purple: \"#3f50b5\", Violet: \"#EE82EE\" };\nlet TwitchChannelName = \"monstercat\";\nlet YoutubeLiveStreamCode = \"bQH6xDvmsQE\";\n\n\nfunction App() {\n\n   \n  return (\n    <div className=\"App\">\n      <Helmet>\n\n        <title> Control My Lights</title>\n        <meta charset=\"utf-8\" />\n        <meta name=\"description\" content=\"Todos!\" />\n          <meta name=\"theme-color\" content=\"#008f68\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n      </Helmet>\n\n      <Navigation id=\"TitleNavbar\" SiteTitle=\"Control My Lights\"\n      Link1Point=\"#LiveControl\" Link1Text=\"Live Control\" \n      Link2Point=\"#LiveChat\" Link2Text=\"Live Chat\"\n      Link3Point=\"#About\" Link3Text=\"About\"\n      Link4Point=\"#Creator\" Link4Text=\"Creator\" />\n            <CustomColorPicker /> \n\n          <div id=\"LiveControl\" href=\"#LiveControl\" className=\"container-fluid mt-5\" style={{height:\"100vh\", background:'black !important'}} >\n            \n            <div className=\"d-flex justify-content-center  h-75\">\n              <div className=\"row\">\n                <div className=\"col\">\n                  <TwitchVideo ChannelName={TwitchChannelName} SiteSource={window.location.hostname} Autoplay={true} Title=\"Banner\" Muted={false}></TwitchVideo>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"row mt-5\">\n              <div className=\"col\">\n                <div className=\"d-flex justify-content-center \">\n\n                  <ListOfColorChoices colors=\"default\" object={defaultColors} />\n                </div>\n              </div>\n            </div>\n          </div>\n          {/* Second section: Chat data */}\n\n          <div id=\"LiveChat\" href=\"#LiveChat\" className=\"container-fluid mt-5\" style={{height:\"120vh\"}} >\n            <div className=\"d-flex justify-content-center  h-75\">\n              <div className=\"row\">\n                <div className=\"col-lg\" style={{height:\"50vh\"}}>\n                <TwitchVideo ChannelName={TwitchChannelName} SiteSource={window.location.hostname} Autoplay={false} Title=\"Small\" Muted={true}></TwitchVideo>\n\n                </div>\n                <div className=\"col-lg\">\n                <TwitchChat ChannelName={TwitchChannelName} siteSource={window.location.hostname}></TwitchChat>\n                </div>\n                <div className=\"col-lg\">\n                  <YoutubeChat LiveStreamCode={YoutubeLiveStreamCode} siteSource={window.location.hostname}></YoutubeChat>\n                </div>\n              </div>\n            </div>\n          </div>\n      </div>\n\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\n/*import './index.css'; */\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />\n  ,document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}